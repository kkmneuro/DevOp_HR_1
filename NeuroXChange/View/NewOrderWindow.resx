<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAAtAI0DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9UB79apanqltpFq1zezJbwKQC7tgZJAUD3JIAA5JIAyTT729i
        0+0mup5Fht4UMjyuwCqoBJJJ6AAE/hXy78RfiFqvizxfPptmdQtYLGCW5v59PQvNYxLC7iBDjak7qCrS
        clWbYCdp3d2DwksVOy2R4eaZpTy2neSvJ7I9c8RfHrQfD8jxzS29q6gELqFwIHYHofKUPKv0dFqtoH7Q
        Og63PFFHLZ3E8jbVjsrxWf8A74lETt7BVYnsK+YfBniDSY9Y0iS18JWenvqWrw2cF48zXWYvMjM6YlZh
        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
        FFFABRRRQAUUUUAFFFFAH//Z
</value>
  </data>
</root>