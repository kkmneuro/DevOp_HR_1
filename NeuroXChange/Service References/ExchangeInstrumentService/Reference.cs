//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NeuroXChange.ExchangeInstrumentService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstrumentData", Namespace="http://schemas.datacontract.org/2004/07/ExchangeInstrumentService")]
    [System.SerializableAttribute()]
    public partial class InstrumentData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuySideTurnoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DPRInitialPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DPRIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DPRRangeHigherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreezeLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HedgedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialBuyMarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialSellMarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstruementIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LPIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LimitAndStopLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaintenanceBuyMarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaintenanceSellMarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarginCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarketLotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaximumAllowablePositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaximumLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaximumOrderValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuotationBaseValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityTypeCharField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SellSideTurnoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SettlingCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpreadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpreadBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenderEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenderStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TickPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TickSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradingCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradingGatewayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ULAssestField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuySideTurnover {
            get {
                return this.BuySideTurnoverField;
            }
            set {
                if ((object.ReferenceEquals(this.BuySideTurnoverField, value) != true)) {
                    this.BuySideTurnoverField = value;
                    this.RaisePropertyChanged("BuySideTurnover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractSize {
            get {
                return this.ContractSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractSizeField, value) != true)) {
                    this.ContractSizeField = value;
                    this.RaisePropertyChanged("ContractSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DPRInitialPercentage {
            get {
                return this.DPRInitialPercentageField;
            }
            set {
                if ((object.ReferenceEquals(this.DPRInitialPercentageField, value) != true)) {
                    this.DPRInitialPercentageField = value;
                    this.RaisePropertyChanged("DPRInitialPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DPRInterval {
            get {
                return this.DPRIntervalField;
            }
            set {
                if ((object.ReferenceEquals(this.DPRIntervalField, value) != true)) {
                    this.DPRIntervalField = value;
                    this.RaisePropertyChanged("DPRInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DPRRangeHigher {
            get {
                return this.DPRRangeHigherField;
            }
            set {
                if ((object.ReferenceEquals(this.DPRRangeHigherField, value) != true)) {
                    this.DPRRangeHigherField = value;
                    this.RaisePropertyChanged("DPRRangeHigher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryEndDate {
            get {
                return this.DeliveryEndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryEndDateField, value) != true)) {
                    this.DeliveryEndDateField = value;
                    this.RaisePropertyChanged("DeliveryEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryQuantity {
            get {
                return this.DeliveryQuantityField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryQuantityField, value) != true)) {
                    this.DeliveryQuantityField = value;
                    this.RaisePropertyChanged("DeliveryQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryStartDate {
            get {
                return this.DeliveryStartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryStartDateField, value) != true)) {
                    this.DeliveryStartDateField = value;
                    this.RaisePropertyChanged("DeliveryStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryType {
            get {
                return this.DeliveryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTypeField, value) != true)) {
                    this.DeliveryTypeField = value;
                    this.RaisePropertyChanged("DeliveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryUnit {
            get {
                return this.DeliveryUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryUnitField, value) != true)) {
                    this.DeliveryUnitField = value;
                    this.RaisePropertyChanged("DeliveryUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descriptions {
            get {
                return this.DescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionsField, value) != true)) {
                    this.DescriptionsField = value;
                    this.RaisePropertyChanged("Descriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Digits {
            get {
                return this.DigitsField;
            }
            set {
                if ((object.ReferenceEquals(this.DigitsField, value) != true)) {
                    this.DigitsField = value;
                    this.RaisePropertyChanged("Digits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpiryDateField, value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreezeLevel {
            get {
                return this.FreezeLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.FreezeLevelField, value) != true)) {
                    this.FreezeLevelField = value;
                    this.RaisePropertyChanged("FreezeLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hedged {
            get {
                return this.HedgedField;
            }
            set {
                if ((object.ReferenceEquals(this.HedgedField, value) != true)) {
                    this.HedgedField = value;
                    this.RaisePropertyChanged("Hedged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InitialBuyMargin {
            get {
                return this.InitialBuyMarginField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialBuyMarginField, value) != true)) {
                    this.InitialBuyMarginField = value;
                    this.RaisePropertyChanged("InitialBuyMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InitialSellMargin {
            get {
                return this.InitialSellMarginField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialSellMarginField, value) != true)) {
                    this.InitialSellMarginField = value;
                    this.RaisePropertyChanged("InitialSellMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstruementID {
            get {
                return this.InstruementIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InstruementIDField, value) != true)) {
                    this.InstruementIDField = value;
                    this.RaisePropertyChanged("InstruementID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActiveField, value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LPID {
            get {
                return this.LPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LPIDField, value) != true)) {
                    this.LPIDField = value;
                    this.RaisePropertyChanged("LPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LimitAndStopLevel {
            get {
                return this.LimitAndStopLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.LimitAndStopLevelField, value) != true)) {
                    this.LimitAndStopLevelField = value;
                    this.RaisePropertyChanged("LimitAndStopLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaintenanceBuyMargin {
            get {
                return this.MaintenanceBuyMarginField;
            }
            set {
                if ((object.ReferenceEquals(this.MaintenanceBuyMarginField, value) != true)) {
                    this.MaintenanceBuyMarginField = value;
                    this.RaisePropertyChanged("MaintenanceBuyMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaintenanceSellMargin {
            get {
                return this.MaintenanceSellMarginField;
            }
            set {
                if ((object.ReferenceEquals(this.MaintenanceSellMarginField, value) != true)) {
                    this.MaintenanceSellMarginField = value;
                    this.RaisePropertyChanged("MaintenanceSellMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarginCurrency {
            get {
                return this.MarginCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.MarginCurrencyField, value) != true)) {
                    this.MarginCurrencyField = value;
                    this.RaisePropertyChanged("MarginCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarketLot {
            get {
                return this.MarketLotField;
            }
            set {
                if ((object.ReferenceEquals(this.MarketLotField, value) != true)) {
                    this.MarketLotField = value;
                    this.RaisePropertyChanged("MarketLot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaximumAllowablePosition {
            get {
                return this.MaximumAllowablePositionField;
            }
            set {
                if ((object.ReferenceEquals(this.MaximumAllowablePositionField, value) != true)) {
                    this.MaximumAllowablePositionField = value;
                    this.RaisePropertyChanged("MaximumAllowablePosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaximumLots {
            get {
                return this.MaximumLotsField;
            }
            set {
                if ((object.ReferenceEquals(this.MaximumLotsField, value) != true)) {
                    this.MaximumLotsField = value;
                    this.RaisePropertyChanged("MaximumLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaximumOrderValue {
            get {
                return this.MaximumOrderValueField;
            }
            set {
                if ((object.ReferenceEquals(this.MaximumOrderValueField, value) != true)) {
                    this.MaximumOrderValueField = value;
                    this.RaisePropertyChanged("MaximumOrderValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Orders {
            get {
                return this.OrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdersField, value) != true)) {
                    this.OrdersField = value;
                    this.RaisePropertyChanged("Orders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuotationBaseValue {
            get {
                return this.QuotationBaseValueField;
            }
            set {
                if ((object.ReferenceEquals(this.QuotationBaseValueField, value) != true)) {
                    this.QuotationBaseValueField = value;
                    this.RaisePropertyChanged("QuotationBaseValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityTypeChar {
            get {
                return this.SecurityTypeCharField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityTypeCharField, value) != true)) {
                    this.SecurityTypeCharField = value;
                    this.RaisePropertyChanged("SecurityTypeChar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityTypeID {
            get {
                return this.SecurityTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityTypeIDField, value) != true)) {
                    this.SecurityTypeIDField = value;
                    this.RaisePropertyChanged("SecurityTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SellSideTurnover {
            get {
                return this.SellSideTurnoverField;
            }
            set {
                if ((object.ReferenceEquals(this.SellSideTurnoverField, value) != true)) {
                    this.SellSideTurnoverField = value;
                    this.RaisePropertyChanged("SellSideTurnover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SettlingCurrency {
            get {
                return this.SettlingCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.SettlingCurrencyField, value) != true)) {
                    this.SettlingCurrencyField = value;
                    this.RaisePropertyChanged("SettlingCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Spread {
            get {
                return this.SpreadField;
            }
            set {
                if ((object.ReferenceEquals(this.SpreadField, value) != true)) {
                    this.SpreadField = value;
                    this.RaisePropertyChanged("Spread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpreadBalance {
            get {
                return this.SpreadBalanceField;
            }
            set {
                if ((object.ReferenceEquals(this.SpreadBalanceField, value) != true)) {
                    this.SpreadBalanceField = value;
                    this.RaisePropertyChanged("SpreadBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenderEndDate {
            get {
                return this.TenderEndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TenderEndDateField, value) != true)) {
                    this.TenderEndDateField = value;
                    this.RaisePropertyChanged("TenderEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenderStartDate {
            get {
                return this.TenderStartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TenderStartDateField, value) != true)) {
                    this.TenderStartDateField = value;
                    this.RaisePropertyChanged("TenderStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TickPrice {
            get {
                return this.TickPriceField;
            }
            set {
                if ((object.ReferenceEquals(this.TickPriceField, value) != true)) {
                    this.TickPriceField = value;
                    this.RaisePropertyChanged("TickPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TickSize {
            get {
                return this.TickSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.TickSizeField, value) != true)) {
                    this.TickSizeField = value;
                    this.RaisePropertyChanged("TickSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradingCurrency {
            get {
                return this.TradingCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.TradingCurrencyField, value) != true)) {
                    this.TradingCurrencyField = value;
                    this.RaisePropertyChanged("TradingCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradingGateway {
            get {
                return this.TradingGatewayField;
            }
            set {
                if ((object.ReferenceEquals(this.TradingGatewayField, value) != true)) {
                    this.TradingGatewayField = value;
                    this.RaisePropertyChanged("TradingGateway");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ULAssest {
            get {
                return this.ULAssestField;
            }
            set {
                if ((object.ReferenceEquals(this.ULAssestField, value) != true)) {
                    this.ULAssestField = value;
                    this.RaisePropertyChanged("ULAssest");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstrumentInfo", Namespace="http://schemas.datacontract.org/2004/07/ExchangeInstrumentService")]
    [System.SerializableAttribute()]
    public partial class InstrumentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExchangeInstrumentService.IExchangeInstrumentService")]
    public interface IExchangeInstrumentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExchangeInstrumentService/GetInstrumentSpec", ReplyAction="http://tempuri.org/IExchangeInstrumentService/GetInstrumentSpecResponse")]
        NeuroXChange.ExchangeInstrumentService.InstrumentData[] GetInstrumentSpec(int participantsId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExchangeInstrumentService/GetInstrumentSpec", ReplyAction="http://tempuri.org/IExchangeInstrumentService/GetInstrumentSpecResponse")]
        System.Threading.Tasks.Task<NeuroXChange.ExchangeInstrumentService.InstrumentData[]> GetInstrumentSpecAsync(int participantsId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExchangeInstrumentService/GetInstrumentInfo", ReplyAction="http://tempuri.org/IExchangeInstrumentService/GetInstrumentInfoResponse")]
        NeuroXChange.ExchangeInstrumentService.InstrumentInfo[] GetInstrumentInfo(int participantsId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExchangeInstrumentService/GetInstrumentInfo", ReplyAction="http://tempuri.org/IExchangeInstrumentService/GetInstrumentInfoResponse")]
        System.Threading.Tasks.Task<NeuroXChange.ExchangeInstrumentService.InstrumentInfo[]> GetInstrumentInfoAsync(int participantsId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExchangeInstrumentService/GetAsyncInstrumentSpec", ReplyAction="http://tempuri.org/IExchangeInstrumentService/GetAsyncInstrumentSpecResponse")]
        NeuroXChange.ExchangeInstrumentService.InstrumentData[] GetAsyncInstrumentSpec(int participantsId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExchangeInstrumentService/GetAsyncInstrumentSpec", ReplyAction="http://tempuri.org/IExchangeInstrumentService/GetAsyncInstrumentSpecResponse")]
        System.Threading.Tasks.Task<NeuroXChange.ExchangeInstrumentService.InstrumentData[]> GetAsyncInstrumentSpecAsync(int participantsId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExchangeInstrumentServiceChannel : NeuroXChange.ExchangeInstrumentService.IExchangeInstrumentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExchangeInstrumentServiceClient : System.ServiceModel.ClientBase<NeuroXChange.ExchangeInstrumentService.IExchangeInstrumentService>, NeuroXChange.ExchangeInstrumentService.IExchangeInstrumentService {
        
        public ExchangeInstrumentServiceClient() {
        }
        
        public ExchangeInstrumentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExchangeInstrumentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExchangeInstrumentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExchangeInstrumentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NeuroXChange.ExchangeInstrumentService.InstrumentData[] GetInstrumentSpec(int participantsId) {
            return base.Channel.GetInstrumentSpec(participantsId);
        }
        
        public System.Threading.Tasks.Task<NeuroXChange.ExchangeInstrumentService.InstrumentData[]> GetInstrumentSpecAsync(int participantsId) {
            return base.Channel.GetInstrumentSpecAsync(participantsId);
        }
        
        public NeuroXChange.ExchangeInstrumentService.InstrumentInfo[] GetInstrumentInfo(int participantsId) {
            return base.Channel.GetInstrumentInfo(participantsId);
        }
        
        public System.Threading.Tasks.Task<NeuroXChange.ExchangeInstrumentService.InstrumentInfo[]> GetInstrumentInfoAsync(int participantsId) {
            return base.Channel.GetInstrumentInfoAsync(participantsId);
        }
        
        public NeuroXChange.ExchangeInstrumentService.InstrumentData[] GetAsyncInstrumentSpec(int participantsId) {
            return base.Channel.GetAsyncInstrumentSpec(participantsId);
        }
        
        public System.Threading.Tasks.Task<NeuroXChange.ExchangeInstrumentService.InstrumentData[]> GetAsyncInstrumentSpecAsync(int participantsId) {
            return base.Channel.GetAsyncInstrumentSpecAsync(participantsId);
        }
    }
}
